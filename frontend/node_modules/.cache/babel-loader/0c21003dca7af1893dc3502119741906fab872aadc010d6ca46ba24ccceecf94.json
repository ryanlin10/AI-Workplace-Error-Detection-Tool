{"ast":null,"code":"var _jsxFileName = \"/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport AudioRecorder from './components/AudioRecorder';\nimport VideoCapture from './components/VideoCapture';\nimport ResultDisplay from './components/ResultDisplay';\n\n// Update to use Express backend on port 8080\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api';\n\n// Configure axios defaults\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.timeout = 30000; // 30 seconds timeout\n\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioText, setAudioText] = useState('');\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [debug, setDebug] = useState({\n    lastTextSent: '',\n    lastImageSent: false,\n    apiResponses: []\n  });\n\n  // Add effect to log state changes\n  useEffect(() => {\n    console.log('Current state:', {\n      isRecording,\n      audioTextLength: audioText ? audioText.length : 0,\n      hasCapturedImage: !!capturedImage,\n      isProcessing,\n      hasResult: !!result,\n      hasError: !!error\n    });\n  }, [isRecording, audioText, capturedImage, isProcessing, result, error]);\n  const handleStartStream = () => {\n    console.log('Starting stream');\n    setIsRecording(true);\n    setAudioText('');\n    setCapturedImage(null);\n    setResult(null);\n    setError(null);\n    setDebug({\n      lastTextSent: '',\n      lastImageSent: false,\n      apiResponses: []\n    });\n  };\n  const handleEndStream = async () => {\n    console.log('Ending stream');\n    setIsRecording(false);\n    setIsProcessing(true);\n\n    // Store what we're sending for debugging\n    setDebug(prev => ({\n      ...prev,\n      lastTextSent: audioText,\n      lastImageSent: !!capturedImage\n    }));\n    console.log('Preparing to send data to backend:', {\n      textLength: audioText ? audioText.length : 0,\n      hasImage: !!capturedImage,\n      textSample: audioText ? audioText.substring(0, 50) + '...' : 'No text'\n    });\n\n    // Validate data before sending\n    if (!audioText && !capturedImage) {\n      console.warn('No data to send - both text and image are empty');\n      setError('Please provide either text or an image before submitting.');\n      setIsProcessing(false);\n      return;\n    }\n    try {\n      // Prepare request data\n      const requestData = {\n        text: audioText || '',\n        // Ensure text is never undefined\n        image: capturedImage || '' // Ensure image is never undefined\n      };\n      console.log('Sending data to backend:', {\n        textLength: requestData.text.length,\n        hasImage: !!requestData.image,\n        requestSize: JSON.stringify(requestData).length\n      });\n\n      // Send data to backend with explicit content type\n      const response = await axios.post(`${API_URL}/process/`, requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Received response from backend:', response.data);\n\n      // Update debug info\n      setDebug(prev => ({\n        ...prev,\n        apiResponses: [...prev.apiResponses, {\n          timestamp: new Date().toISOString(),\n          status: response.status,\n          data: response.data\n        }]\n      }));\n      setResult(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error processing data:', err);\n\n      // Add detailed error logging\n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Server response error:', {\n          status: err.response.status,\n          headers: err.response.headers,\n          data: err.response.data\n        });\n      } else if (err.request) {\n        // The request was made but no response was received\n        console.error('No response received:', err.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Request setup error:', err.message);\n      }\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred while processing your data');\n\n      // Update debug info\n      setDebug(prev => {\n        var _err$response2;\n        return {\n          ...prev,\n          apiResponses: [...prev.apiResponses, {\n            timestamp: new Date().toISOString(),\n            error: err.message,\n            status: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) || 'Network Error'\n          }]\n        };\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handler for transcript updates from AudioRecorder\n  const handleTranscriptUpdate = text => {\n    console.log('Transcript updated:', text ? text.substring(0, 50) + '...' : 'No text');\n    setAudioText(text);\n  };\n\n  // Handler for image capture updates\n  const handleImageCapture = imageData => {\n    console.log('Image captured in App.js, data length:', imageData ? imageData.length : 0);\n    setCapturedImage(imageData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio & Vision Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-button ${isRecording ? 'disabled' : 'start'}`,\n        onClick: handleStartStream,\n        disabled: isRecording || isProcessing,\n        children: \"Start Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-button ${!isRecording ? 'disabled' : 'stop'}`,\n        onClick: handleEndStream,\n        disabled: !isRecording || isProcessing,\n        children: \"End Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Audio Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AudioRecorder, {\n          isRecording: isRecording,\n          onTranscriptUpdate: handleTranscriptUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), audioText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transcript:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: audioText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Video Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoCapture, {\n          isActive: isRecording,\n          onImageCapture: handleImageCapture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: capturedImage,\n            alt: \"Captured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-section\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Last Text Sent:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: debug.lastTextSent || 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Last Image Sent:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: debug.lastImageSent ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"API Responses:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: debug.apiResponses.map((resp, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [resp.timestamp, \": Status \", resp.status, resp.error ? ` - Error: ${resp.error}` : '']\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rJYik5MXr6Sy9PnMFtTP9nglAvw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AudioRecorder","VideoCapture","ResultDisplay","jsxDEV","_jsxDEV","API_URL","defaults","headers","post","timeout","App","_s","isRecording","setIsRecording","audioText","setAudioText","capturedImage","setCapturedImage","isProcessing","setIsProcessing","result","setResult","error","setError","debug","setDebug","lastTextSent","lastImageSent","apiResponses","console","log","audioTextLength","length","hasCapturedImage","hasResult","hasError","handleStartStream","handleEndStream","prev","textLength","hasImage","textSample","substring","warn","requestData","text","image","requestSize","JSON","stringify","response","data","timestamp","Date","toISOString","status","err","_err$response","_err$response$data","request","message","_err$response2","handleTranscriptUpdate","handleImageCapture","imageData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onTranscriptUpdate","isActive","onImageCapture","src","alt","map","resp","idx","_c","$RefreshReg$"],"sources":["/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport AudioRecorder from './components/AudioRecorder';\nimport VideoCapture from './components/VideoCapture';\nimport ResultDisplay from './components/ResultDisplay';\n\n// Update to use Express backend on port 8080\nconst API_URL = 'http://localhost:8080/api';\n\n// Configure axios defaults\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.timeout = 30000; // 30 seconds timeout\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioText, setAudioText] = useState('');\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [debug, setDebug] = useState({\n    lastTextSent: '',\n    lastImageSent: false,\n    apiResponses: []\n  });\n\n  // Add effect to log state changes\n  useEffect(() => {\n    console.log('Current state:', {\n      isRecording,\n      audioTextLength: audioText ? audioText.length : 0,\n      hasCapturedImage: !!capturedImage,\n      isProcessing,\n      hasResult: !!result,\n      hasError: !!error\n    });\n  }, [isRecording, audioText, capturedImage, isProcessing, result, error]);\n\n  const handleStartStream = () => {\n    console.log('Starting stream');\n    setIsRecording(true);\n    setAudioText('');\n    setCapturedImage(null);\n    setResult(null);\n    setError(null);\n    setDebug({\n      lastTextSent: '',\n      lastImageSent: false,\n      apiResponses: []\n    });\n  };\n\n  const handleEndStream = async () => {\n    console.log('Ending stream');\n    setIsRecording(false);\n    setIsProcessing(true);\n    \n    // Store what we're sending for debugging\n    setDebug(prev => ({\n      ...prev,\n      lastTextSent: audioText,\n      lastImageSent: !!capturedImage\n    }));\n    \n    console.log('Preparing to send data to backend:', { \n      textLength: audioText ? audioText.length : 0,\n      hasImage: !!capturedImage,\n      textSample: audioText ? audioText.substring(0, 50) + '...' : 'No text'\n    });\n    \n    // Validate data before sending\n    if (!audioText && !capturedImage) {\n      console.warn('No data to send - both text and image are empty');\n      setError('Please provide either text or an image before submitting.');\n      setIsProcessing(false);\n      return;\n    }\n    \n    try {\n      // Prepare request data\n      const requestData = {\n        text: audioText || '',  // Ensure text is never undefined\n        image: capturedImage || ''  // Ensure image is never undefined\n      };\n      \n      console.log('Sending data to backend:', { \n        textLength: requestData.text.length,\n        hasImage: !!requestData.image,\n        requestSize: JSON.stringify(requestData).length\n      });\n\n      // Send data to backend with explicit content type\n      const response = await axios.post(`${API_URL}/process/`, requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Received response from backend:', response.data);\n      \n      // Update debug info\n      setDebug(prev => ({\n        ...prev,\n        apiResponses: [...prev.apiResponses, {\n          timestamp: new Date().toISOString(),\n          status: response.status,\n          data: response.data\n        }]\n      }));\n      \n      setResult(response.data);\n    } catch (err) {\n      console.error('Error processing data:', err);\n      \n      // Add detailed error logging\n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Server response error:', {\n          status: err.response.status,\n          headers: err.response.headers,\n          data: err.response.data\n        });\n      } else if (err.request) {\n        // The request was made but no response was received\n        console.error('No response received:', err.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Request setup error:', err.message);\n      }\n\n      setError(err.response?.data?.error || 'An error occurred while processing your data');\n      \n      // Update debug info\n      setDebug(prev => ({\n        ...prev,\n        apiResponses: [...prev.apiResponses, {\n          timestamp: new Date().toISOString(),\n          error: err.message,\n          status: err.response?.status || 'Network Error'\n        }]\n      }));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handler for transcript updates from AudioRecorder\n  const handleTranscriptUpdate = (text) => {\n    console.log('Transcript updated:', text ? text.substring(0, 50) + '...' : 'No text');\n    setAudioText(text);\n  };\n\n  // Handler for image capture updates\n  const handleImageCapture = (imageData) => {\n    console.log('Image captured in App.js, data length:', imageData ? imageData.length : 0);\n    setCapturedImage(imageData);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Audio & Vision Processor</h1>\n      \n      <div className=\"controls\">\n        <button \n          className={`control-button ${isRecording ? 'disabled' : 'start'}`}\n          onClick={handleStartStream}\n          disabled={isRecording || isProcessing}\n        >\n          Start Stream\n        </button>\n        <button \n          className={`control-button ${!isRecording ? 'disabled' : 'stop'}`}\n          onClick={handleEndStream}\n          disabled={!isRecording || isProcessing}\n        >\n          End Stream\n        </button>\n      </div>\n      \n      <div className=\"input-container\">\n        <div className=\"input-section\">\n          <h2>Audio Input</h2>\n          <AudioRecorder \n            isRecording={isRecording} \n            onTranscriptUpdate={handleTranscriptUpdate} \n          />\n          {audioText && (\n            <div className=\"transcript\">\n              <h3>Transcript:</h3>\n              <p>{audioText}</p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"input-section\">\n          <h2>Video Input</h2>\n          <VideoCapture \n            isActive={isRecording} \n            onImageCapture={handleImageCapture} \n          />\n          {capturedImage && (\n            <div className=\"image-preview\">\n              <h3>Captured Image:</h3>\n              <img src={capturedImage} alt=\"Captured\" />\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {isProcessing && (\n        <div className=\"processing\">\n          <p>Processing your data...</p>\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error\">\n          <h3>Error:</h3>\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {result && (\n        <ResultDisplay result={result} />\n      )}\n      \n      {/* Add debug information section that's hidden by default */}\n      <div className=\"debug-section\">\n        <details>\n          <summary>Debug Information</summary>\n          <div className=\"debug-content\">\n            <h4>Last Text Sent:</h4>\n            <p>{debug.lastTextSent || 'None'}</p>\n            \n            <h4>Last Image Sent:</h4>\n            <p>{debug.lastImageSent ? 'Yes' : 'No'}</p>\n            \n            <h4>API Responses:</h4>\n            <ul>\n              {debug.apiResponses.map((resp, idx) => (\n                <li key={idx}>\n                  {resp.timestamp}: Status {resp.status} \n                  {resp.error ? ` - Error: ${resp.error}` : ''}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </details>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
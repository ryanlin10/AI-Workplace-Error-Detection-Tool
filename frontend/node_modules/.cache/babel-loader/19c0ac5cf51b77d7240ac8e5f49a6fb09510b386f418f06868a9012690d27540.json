{"ast":null,"code":"var _jsxFileName = \"/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/components/ResultDisplay.js\";\nimport React from 'react';\nimport './ResultDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultDisplay = ({\n  result\n}) => {\n  // Function to format the numerical information with proper styling\n  const formatNumericInfo = text => {\n    if (!text) return null;\n\n    // Check if we have any numerical information\n    if (text.includes(\"No medical measurements recorded\")) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-measurements\",\n        children: \"No medical measurements recorded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Split by numbered list items if present (1., 2., etc.)\n    if (text.match(/^\\d+\\.\\s/m)) {\n      const items = text.split(/\\n(?=\\d+\\.\\s)/);\n      return /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"measurements-list\",\n        children: items.map((item, index) => {\n          // Remove the numbering that's added by Claude (we're using <ol> for that)\n          const cleanedItem = item.replace(/^\\d+\\.\\s/, '');\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: cleanedItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    } else {\n      // If not numbered list, split by lines\n      const lines = text.split('\\n').filter(line => line.trim());\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"measurements-list\",\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Processing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), result.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Medical Information Log:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-text\",\n        children: formatNumericInfo(result.summary)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-info\",\n        children: [\"Medical log saved to file: \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: result.summary_file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Failed to process data: \", result.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultDisplay;\nexport default ResultDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultDisplay","result","formatNumericInfo","text","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","match","items","split","map","item","index","cleanedItem","replace","lines","filter","line","trim","success","summary","summary_file","error","_c","$RefreshReg$"],"sources":["/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/components/ResultDisplay.js"],"sourcesContent":["import React from 'react';\nimport './ResultDisplay.css';\n\nconst ResultDisplay = ({ result }) => {\n  // Function to format the numerical information with proper styling\n  const formatNumericInfo = (text) => {\n    if (!text) return null;\n    \n    // Check if we have any numerical information\n    if (text.includes(\"No medical measurements recorded\")) {\n      return <p className=\"no-measurements\">No medical measurements recorded</p>;\n    }\n    \n    // Split by numbered list items if present (1., 2., etc.)\n    if (text.match(/^\\d+\\.\\s/m)) {\n      const items = text.split(/\\n(?=\\d+\\.\\s)/);\n      return (\n        <ol className=\"measurements-list\">\n          {items.map((item, index) => {\n            // Remove the numbering that's added by Claude (we're using <ol> for that)\n            const cleanedItem = item.replace(/^\\d+\\.\\s/, '');\n            return <li key={index}>{cleanedItem}</li>;\n          })}\n        </ol>\n      );\n    } else {\n      // If not numbered list, split by lines\n      const lines = text.split('\\n').filter(line => line.trim());\n      return (\n        <ul className=\"measurements-list\">\n          {lines.map((line, index) => (\n            <li key={index}>{line}</li>\n          ))}\n        </ul>\n      );\n    }\n  };\n\n  return (\n    <div className=\"result-display\">\n      <h2>Processing Results</h2>\n      \n      {result.success ? (\n        <div className=\"result-content\">\n          <h3>Medical Information Log:</h3>\n          <div className=\"summary-text\">\n            {formatNumericInfo(result.summary)}\n          </div>\n          <p className=\"file-info\">\n            Medical log saved to file: <code>{result.summary_file}</code>\n          </p>\n        </div>\n      ) : (\n        <div className=\"error-message\">\n          <p>Failed to process data: {result.error}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ResultDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
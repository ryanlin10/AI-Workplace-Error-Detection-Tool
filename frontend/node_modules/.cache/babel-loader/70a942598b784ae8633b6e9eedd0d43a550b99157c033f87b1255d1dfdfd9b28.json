{"ast":null,"code":"var _jsxFileName = \"/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/components/VideoCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './VideoCapture.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCapture = ({\n  isActive,\n  onImageCapture\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const canvasRef = useRef(document.createElement('canvas'));\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [cameraError, setCameraError] = useState(false);\n  const [hasValidImage, setHasValidImage] = useState(false);\n  const [cameraStatus, setCameraStatus] = useState('Initializing camera...');\n  const [storedImage, setStoredImage] = useState(null);\n  const [captureMode, setCaptureMode] = useState('face'); // 'face' or 'medical'\n  const [faceRecognitionResult, setFaceRecognitionResult] = useState(null);\n  const [faceRecognitionLoading, setFaceRecognitionLoading] = useState(false);\n  const [imageAnalysisResult, setImageAnalysisResult] = useState(null);\n  const [imageAnalysisLoading, setImageAnalysisLoading] = useState(false);\n  const [patientData, setPatientData] = useState(null);\n\n  // Function to check if an image is blank/black\n  const isImageBlank = imageData => {\n    // Create a temporary canvas to analyze the image\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n    const img = new Image();\n\n    // Set up a promise to handle the async image loading\n    return new Promise(resolve => {\n      img.onload = () => {\n        tempCanvas.width = img.width;\n        tempCanvas.height = img.height;\n        tempCtx.drawImage(img, 0, 0);\n\n        // Get image data and check if it's mostly black\n        const data = tempCtx.getImageData(0, 0, tempCanvas.width, tempCanvas.height).data;\n        let nonBlackPixels = 0;\n        const totalPixels = data.length / 4;\n\n        // Sample pixels to check for non-black content\n        for (let i = 0; i < data.length; i += 16) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n\n          // If pixel is not black (allowing some noise)\n          if (r > 10 || g > 10 || b > 10) {\n            nonBlackPixels++;\n          }\n        }\n\n        // If less than 5% of sampled pixels are non-black, consider it blank\n        const isBlank = nonBlackPixels / (totalPixels / 4) < 0.05;\n        console.log(`Image analysis: ${nonBlackPixels} non-black pixels out of ${totalPixels / 4} sampled. Blank: ${isBlank}`);\n        resolve(isBlank);\n      };\n      img.onerror = () => {\n        console.error('Error analyzing image');\n        resolve(true); // Assume blank on error\n      };\n      img.src = imageData;\n    });\n  };\n\n  // Function to capture image from video\n  const captureImage = useCallback(async mode => {\n    if (!videoRef.current) {\n      console.warn('Video element not available');\n      return false;\n    }\n    if (!isCameraReady) {\n      console.warn('Camera not ready yet');\n      return false;\n    }\n    if (videoRef.current.videoWidth <= 0 || videoRef.current.videoHeight <= 0) {\n      console.warn('Video dimensions not available yet');\n      return false;\n    }\n    console.log(`Capturing ${mode} image from video`, {\n      videoWidth: videoRef.current.videoWidth,\n      videoHeight: videoRef.current.videoHeight,\n      readyState: videoRef.current.readyState\n    });\n    try {\n      // Force a draw to make sure there's a frame to capture\n      if (videoRef.current.readyState < 2) {\n        console.warn('Video not fully loaded, waiting...');\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      // Ensure canvas dimensions match video\n      canvasRef.current.width = videoRef.current.videoWidth || 640;\n      canvasRef.current.height = videoRef.current.videoHeight || 480;\n\n      // Draw the current video frame to canvas\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Convert to data URL with higher quality\n      const imageDataUrl = canvasRef.current.toDataURL('image/jpeg', 0.95);\n      console.log(`Raw ${mode} image captured, data URL length:`, imageDataUrl.length);\n\n      // Check if the image is blank\n      const isBlank = await isImageBlank(imageDataUrl);\n      if (isBlank) {\n        console.warn('Captured image appears to be blank');\n        return false;\n      }\n      console.log(`Valid ${mode} image captured successfully, data URL length:`, imageDataUrl.length);\n\n      // Store the image and notify parent component\n      setStoredImage(imageDataUrl);\n      setHasValidImage(true);\n      onImageCapture(imageDataUrl);\n\n      // Process the image based on the mode\n      if (mode === 'face') {\n        await processFaceRecognition(imageDataUrl);\n      } else if (mode === 'medical') {\n        await processMedicalImageAnalysis(imageDataUrl);\n      }\n      return true;\n    } catch (error) {\n      console.error(`Error capturing ${mode} image:`, error);\n      return false;\n    }\n  }, [onImageCapture, isCameraReady]);\n\n  // Function to process face recognition\n  const processFaceRecognition = async imageData => {\n    try {\n      setFaceRecognitionLoading(true);\n      setFaceRecognitionResult(null);\n      console.log('Sending image for face recognition...');\n      const response = await axios.post('http://localhost:8080/api/recognize-face', {\n        image: imageData\n      });\n      console.log('Face recognition result:', response.data);\n      setFaceRecognitionResult(response.data);\n\n      // Store patient data if available\n      if (response.data.patient_data) {\n        setPatientData(response.data.patient_data);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error in face recognition:', error);\n      setFaceRecognitionResult({\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error processing face recognition'\n      });\n    } finally {\n      setFaceRecognitionLoading(false);\n    }\n  };\n\n  // Function to process medical image analysis\n  const processMedicalImageAnalysis = async imageData => {\n    try {\n      setImageAnalysisLoading(true);\n      setImageAnalysisResult(null);\n      console.log('Sending image for medical analysis...');\n      const response = await axios.post('http://localhost:8080/api/analyze-image', {\n        image: imageData\n      });\n      console.log('Medical image analysis result:', response.data);\n      setImageAnalysisResult(response.data);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error in medical image analysis:', error);\n      setImageAnalysisResult({\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error processing image analysis'\n      });\n    } finally {\n      setImageAnalysisLoading(false);\n    }\n  };\n\n  // Face capture button handler\n  const handleFaceCapture = async () => {\n    if (isCameraReady) {\n      console.log('Manual face capture triggered');\n      setCameraStatus('Capturing face image...');\n      const success = await captureImage('face');\n      if (success) {\n        setCameraStatus('Face image captured successfully!');\n      } else {\n        setCameraStatus('Failed to capture face image. Try again.');\n      }\n\n      // Reset status after a delay\n      setTimeout(() => {\n        setCameraStatus(isCameraReady ? 'Camera active' : 'Initializing camera...');\n      }, 2000);\n    }\n  };\n\n  // Medical image capture button handler\n  const handleMedicalCapture = async () => {\n    if (isCameraReady) {\n      console.log('Manual medical image capture triggered');\n      setCameraStatus('Capturing medical image...');\n      const success = await captureImage('medical');\n      if (success) {\n        setCameraStatus('Medical image captured successfully!');\n      } else {\n        setCameraStatus('Failed to capture medical image. Try again.');\n      }\n\n      // Reset status after a delay\n      setTimeout(() => {\n        setCameraStatus(isCameraReady ? 'Camera active' : 'Initializing camera...');\n      }, 2000);\n    }\n  };\n\n  // When stream ends, ensure the parent has the latest image\n  useEffect(() => {\n    if (!isActive && storedImage) {\n      console.log('Stream ended, ensuring parent has the latest captured image');\n      onImageCapture(storedImage);\n    }\n  }, [isActive, storedImage, onImageCapture]);\n\n  // Handle camera setup and teardown\n  useEffect(() => {\n    if (isActive && !cameraError) {\n      console.log('Starting camera');\n      setCameraStatus('Initializing camera...');\n\n      // Reset hasValidImage but keep any stored image\n      if (!storedImage) {\n        setHasValidImage(false);\n      }\n\n      // Only initialize the camera if it's not already ready\n      if (!isCameraReady || !streamRef.current) {\n        // Start camera with specific constraints for better quality\n        navigator.mediaDevices.getUserMedia({\n          video: {\n            width: {\n              ideal: 1280\n            },\n            height: {\n              ideal: 720\n            },\n            facingMode: 'user'\n          }\n        }).then(stream => {\n          console.log('Camera access granted');\n          streamRef.current = stream;\n          if (videoRef.current) {\n            // Set srcObject to the stream\n            videoRef.current.srcObject = stream;\n\n            // Listen for loadedmetadata event\n            videoRef.current.onloadedmetadata = () => {\n              console.log('Video metadata loaded');\n\n              // Play the video\n              videoRef.current.play().then(() => {\n                console.log('Video playback started');\n                setCameraStatus('Camera active - Use the capture buttons below');\n\n                // Wait a moment to ensure video is actually rendering frames\n                setTimeout(() => {\n                  setIsCameraReady(true);\n                }, 1000);\n              }).catch(error => {\n                console.error('Error starting video playback:', error);\n                setCameraError(true);\n                setCameraStatus('Camera error: ' + error.message);\n              });\n            };\n\n            // Listen for errors\n            videoRef.current.onerror = error => {\n              console.error('Video element error:', error);\n              setCameraError(true);\n              setCameraStatus('Video error: ' + (error.message || 'Unknown error'));\n            };\n          }\n        }).catch(error => {\n          console.error('Error accessing camera:', error);\n          setCameraError(true);\n          setCameraStatus('Camera access error: ' + error.message);\n        });\n      } else {\n        // Camera is already initialized, just update the status\n        setCameraStatus('Camera active - Use the capture buttons below');\n      }\n    } else if (!isActive) {\n      // Stop camera when stream ends\n      if (streamRef.current) {\n        console.log('Stopping camera');\n        setCameraStatus('Stopping camera...');\n\n        // Stop all tracks\n        streamRef.current.getTracks().forEach(track => {\n          track.stop();\n          console.log(`Track ${track.kind} stopped`);\n        });\n        streamRef.current = null;\n        setIsCameraReady(false);\n        setCameraStatus('Camera stopped');\n      }\n    }\n    return () => {\n      // Only stop the camera in the cleanup function if isActive is false\n      // This prevents stopping the camera when the component re-renders\n      if (!isActive && streamRef.current) {\n        console.log('Cleanup: stopping camera tracks');\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [isActive, cameraError, storedImage]); // Remove captureMode from dependencies\n\n  // Render face recognition result\n  const renderFaceRecognition = () => {\n    if (faceRecognitionLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-loading\",\n        children: \"Identifying person...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 14\n      }, this);\n    }\n    if (faceRecognitionResult && faceRecognitionResult.success) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-recognition-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Person Identified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-id\",\n            children: [\"ID: \", faceRecognitionResult.person_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-name\",\n            children: faceRecognitionResult.person_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-profession\",\n            children: faceRecognitionResult.person_profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confidence\",\n            children: [\"Confidence: \", faceRecognitionResult.confidence, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), faceRecognitionResult.reference_comparison && faceRecognitionResult.reference_image_url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reference-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Matched with reference image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:8080${faceRecognitionResult.reference_image_url}`,\n              alt: `Reference for ${faceRecognitionResult.person_name}`,\n              className: \"reference-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), faceRecognitionResult.is_fallback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fallback-notice\",\n            children: \"Note: Using simulated recognition (API issue)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this);\n    }\n    if (faceRecognitionResult && !faceRecognitionResult.success) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-recognition-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error identifying person: \", faceRecognitionResult.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Render medical image analysis result\n  const renderImageAnalysis = () => {\n    if (imageAnalysisLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-loading\",\n        children: \"Analyzing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 14\n      }, this);\n    }\n    if (imageAnalysisResult && imageAnalysisResult.success) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-analysis-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Scale Measurement Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-text\",\n          children: imageAnalysisResult.analysis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), imageAnalysisResult.weight && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-measurement\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Detected Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `weight-value ${imageAnalysisResult.hasOvershot ? 'overshot' : 'acceptable'}`,\n            children: [imageAnalysisResult.weight, \" \", imageAnalysisResult.unit, imageAnalysisResult.hasOvershot ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"overshot-warning\",\n              children: \" \\u26A0\\uFE0F EXCEEDS TARGET!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"target-ok\",\n              children: \" \\u2713 Within target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-info\",\n            children: [\"Target: \", imageAnalysisResult.targetWeight, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), imageAnalysisResult.hasOvershot && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation\",\n            children: [\"Recommendation: Reduce the amount to match the target weight of \", imageAnalysisResult.targetWeight, \"g.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), imageAnalysisResult.is_fallback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fallback-notice\",\n          children: \"Note: Using simulated analysis (API issue)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this);\n    }\n    if (imageAnalysisResult && !imageAnalysisResult.success) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-analysis-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error analyzing image: \", imageAnalysisResult.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Render patient medical history\n  const renderPatientMedicalHistory = () => {\n    if (!patientData) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-medical-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Patient Medical History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-name-id\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: patientData.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"patient-id-tag\",\n            children: [\"ID: \", patientData.patient_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-demographics\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Age: \", patientData.age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Gender: \", patientData.gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Blood Type: \", patientData.blood_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medical-data-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medical-data-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medical-data-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Allergies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: patientData.allergies.map((allergy, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: allergy\n              }, `allergy-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medical-data-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Medical Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: patientData.medical_conditions.map((condition, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: condition\n              }, `condition-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medical-data-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medical-data-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Current Medications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: patientData.current_medications.map((med, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [med.name, \" \", med.dosage, \" (\", med.frequency, \")\"]\n              }, `med-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medical-data-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Recent Visits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"visits-list\",\n              children: patientData.recent_visits.map((visit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visit-date\",\n                  children: visit.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visit-reason\",\n                  children: visit.reason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visit-doctor\",\n                  children: visit.doctor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)]\n              }, `visit-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medical-data-section lab-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Lab Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patientData.lab_results.map((lab, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: lab.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lab.test\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lab.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lab.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)]\n            }, `lab-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medical-data-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Clinical Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"clinical-notes\",\n          children: patientData.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-capture-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-capture\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: isActive ? 'active' : 'inactive',\n        muted: true,\n        playsInline: true,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: [cameraStatus, hasValidImage && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), !isActive && hasValidImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-saved-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Image saved and will be sent with your audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this), !isActive && !hasValidImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-inactive\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No image captured. Start stream to use camera.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), cameraError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cameraStatus || 'Camera access error. Please check your permissions.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"capture-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"face-capture-button\",\n        onClick: handleFaceCapture,\n        disabled: !isCameraReady || faceRecognitionLoading,\n        children: \"\\uD83D\\uDC64 Capture Face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"medical-capture-button\",\n        onClick: handleMedicalCapture,\n        disabled: !isCameraReady || imageAnalysisLoading,\n        children: \"\\uD83E\\uDE7A Capture Medical Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-analysis-container\",\n      children: [renderFaceRecognition(), renderImageAnalysis(), renderPatientMedicalHistory()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 536,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"/PWlOPHz31PZyIhnGtgkjZKbL5k=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","VideoCapture","isActive","onImageCapture","_s","videoRef","streamRef","canvasRef","document","createElement","isCameraReady","setIsCameraReady","cameraError","setCameraError","hasValidImage","setHasValidImage","cameraStatus","setCameraStatus","storedImage","setStoredImage","captureMode","setCaptureMode","faceRecognitionResult","setFaceRecognitionResult","faceRecognitionLoading","setFaceRecognitionLoading","imageAnalysisResult","setImageAnalysisResult","imageAnalysisLoading","setImageAnalysisLoading","patientData","setPatientData","isImageBlank","imageData","tempCanvas","tempCtx","getContext","img","Image","Promise","resolve","onload","width","height","drawImage","data","getImageData","nonBlackPixels","totalPixels","length","i","r","g","b","isBlank","console","log","onerror","error","src","captureImage","mode","current","warn","videoWidth","videoHeight","readyState","setTimeout","ctx","imageDataUrl","toDataURL","processFaceRecognition","processMedicalImageAnalysis","response","post","image","patient_data","_error$response","_error$response$data","success","_error$response2","_error$response2$data","handleFaceCapture","handleMedicalCapture","navigator","mediaDevices","getUserMedia","video","ideal","facingMode","then","stream","srcObject","onloadedmetadata","play","catch","message","getTracks","forEach","track","stop","kind","renderFaceRecognition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","person_id","person_name","person_profession","confidence","reference_comparison","reference_image_url","alt","is_fallback","renderImageAnalysis","analysis","weight","hasOvershot","unit","targetWeight","renderPatientMedicalHistory","full_name","patient_id","age","gender","blood_type","allergies","map","allergy","index","medical_conditions","condition","current_medications","med","name","dosage","frequency","recent_visits","visit","date","reason","doctor","lab_results","lab","test","result","notes","ref","muted","playsInline","autoPlay","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/suleimanmahmood/Documents/software engineering stuff/BuildX2/frontend/src/components/VideoCapture.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './VideoCapture.css';\n\nconst VideoCapture = ({ isActive, onImageCapture }) => {\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const canvasRef = useRef(document.createElement('canvas'));\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [cameraError, setCameraError] = useState(false);\n  const [hasValidImage, setHasValidImage] = useState(false);\n  const [cameraStatus, setCameraStatus] = useState('Initializing camera...');\n  const [storedImage, setStoredImage] = useState(null);\n  const [captureMode, setCaptureMode] = useState('face'); // 'face' or 'medical'\n  const [faceRecognitionResult, setFaceRecognitionResult] = useState(null);\n  const [faceRecognitionLoading, setFaceRecognitionLoading] = useState(false);\n  const [imageAnalysisResult, setImageAnalysisResult] = useState(null);\n  const [imageAnalysisLoading, setImageAnalysisLoading] = useState(false);\n  const [patientData, setPatientData] = useState(null);\n  \n  // Function to check if an image is blank/black\n  const isImageBlank = (imageData) => {\n    // Create a temporary canvas to analyze the image\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n    const img = new Image();\n    \n    // Set up a promise to handle the async image loading\n    return new Promise((resolve) => {\n      img.onload = () => {\n        tempCanvas.width = img.width;\n        tempCanvas.height = img.height;\n        tempCtx.drawImage(img, 0, 0);\n        \n        // Get image data and check if it's mostly black\n        const data = tempCtx.getImageData(0, 0, tempCanvas.width, tempCanvas.height).data;\n        let nonBlackPixels = 0;\n        const totalPixels = data.length / 4;\n        \n        // Sample pixels to check for non-black content\n        for (let i = 0; i < data.length; i += 16) {\n          const r = data[i];\n          const g = data[i + 1];\n          const b = data[i + 2];\n          \n          // If pixel is not black (allowing some noise)\n          if (r > 10 || g > 10 || b > 10) {\n            nonBlackPixels++;\n          }\n        }\n        \n        // If less than 5% of sampled pixels are non-black, consider it blank\n        const isBlank = (nonBlackPixels / (totalPixels / 4)) < 0.05;\n        console.log(`Image analysis: ${nonBlackPixels} non-black pixels out of ${totalPixels / 4} sampled. Blank: ${isBlank}`);\n        resolve(isBlank);\n      };\n      \n      img.onerror = () => {\n        console.error('Error analyzing image');\n        resolve(true); // Assume blank on error\n      };\n      \n      img.src = imageData;\n    });\n  };\n  \n  // Function to capture image from video\n  const captureImage = useCallback(async (mode) => {\n    if (!videoRef.current) {\n      console.warn('Video element not available');\n      return false;\n    }\n    \n    if (!isCameraReady) {\n      console.warn('Camera not ready yet');\n      return false;\n    }\n    \n    if (videoRef.current.videoWidth <= 0 || videoRef.current.videoHeight <= 0) {\n      console.warn('Video dimensions not available yet');\n      return false;\n    }\n    \n    console.log(`Capturing ${mode} image from video`, {\n      videoWidth: videoRef.current.videoWidth,\n      videoHeight: videoRef.current.videoHeight,\n      readyState: videoRef.current.readyState\n    });\n    \n    try {\n      // Force a draw to make sure there's a frame to capture\n      if (videoRef.current.readyState < 2) {\n        console.warn('Video not fully loaded, waiting...');\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n      \n      // Ensure canvas dimensions match video\n      canvasRef.current.width = videoRef.current.videoWidth || 640;\n      canvasRef.current.height = videoRef.current.videoHeight || 480;\n      \n      // Draw the current video frame to canvas\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      \n      // Convert to data URL with higher quality\n      const imageDataUrl = canvasRef.current.toDataURL('image/jpeg', 0.95);\n      \n      console.log(`Raw ${mode} image captured, data URL length:`, imageDataUrl.length);\n      \n      // Check if the image is blank\n      const isBlank = await isImageBlank(imageDataUrl);\n      \n      if (isBlank) {\n        console.warn('Captured image appears to be blank');\n        return false;\n      }\n      \n      console.log(`Valid ${mode} image captured successfully, data URL length:`, imageDataUrl.length);\n      \n      // Store the image and notify parent component\n      setStoredImage(imageDataUrl);\n      setHasValidImage(true);\n      onImageCapture(imageDataUrl);\n      \n      // Process the image based on the mode\n      if (mode === 'face') {\n        await processFaceRecognition(imageDataUrl);\n      } else if (mode === 'medical') {\n        await processMedicalImageAnalysis(imageDataUrl);\n      }\n      \n      return true;\n    } catch (error) {\n      console.error(`Error capturing ${mode} image:`, error);\n      return false;\n    }\n  }, [onImageCapture, isCameraReady]);\n  \n  // Function to process face recognition\n  const processFaceRecognition = async (imageData) => {\n    try {\n      setFaceRecognitionLoading(true);\n      setFaceRecognitionResult(null);\n      \n      console.log('Sending image for face recognition...');\n      const response = await axios.post('http://localhost:8080/api/recognize-face', {\n        image: imageData\n      });\n      \n      console.log('Face recognition result:', response.data);\n      setFaceRecognitionResult(response.data);\n      \n      // Store patient data if available\n      if (response.data.patient_data) {\n        setPatientData(response.data.patient_data);\n      }\n      \n    } catch (error) {\n      console.error('Error in face recognition:', error);\n      setFaceRecognitionResult({\n        success: false,\n        error: error.response?.data?.error || 'Error processing face recognition'\n      });\n    } finally {\n      setFaceRecognitionLoading(false);\n    }\n  };\n  \n  // Function to process medical image analysis\n  const processMedicalImageAnalysis = async (imageData) => {\n    try {\n      setImageAnalysisLoading(true);\n      setImageAnalysisResult(null);\n      \n      console.log('Sending image for medical analysis...');\n      const response = await axios.post('http://localhost:8080/api/analyze-image', {\n        image: imageData\n      });\n      \n      console.log('Medical image analysis result:', response.data);\n      setImageAnalysisResult(response.data);\n      \n    } catch (error) {\n      console.error('Error in medical image analysis:', error);\n      setImageAnalysisResult({\n        success: false,\n        error: error.response?.data?.error || 'Error processing image analysis'\n      });\n    } finally {\n      setImageAnalysisLoading(false);\n    }\n  };\n  \n  // Face capture button handler\n  const handleFaceCapture = async () => {\n    if (isCameraReady) {\n      console.log('Manual face capture triggered');\n      setCameraStatus('Capturing face image...');\n      \n      const success = await captureImage('face');\n      \n      if (success) {\n        setCameraStatus('Face image captured successfully!');\n      } else {\n        setCameraStatus('Failed to capture face image. Try again.');\n      }\n      \n      // Reset status after a delay\n      setTimeout(() => {\n        setCameraStatus(isCameraReady ? 'Camera active' : 'Initializing camera...');\n      }, 2000);\n    }\n  };\n  \n  // Medical image capture button handler\n  const handleMedicalCapture = async () => {\n    if (isCameraReady) {\n      console.log('Manual medical image capture triggered');\n      setCameraStatus('Capturing medical image...');\n      \n      const success = await captureImage('medical');\n      \n      if (success) {\n        setCameraStatus('Medical image captured successfully!');\n      } else {\n        setCameraStatus('Failed to capture medical image. Try again.');\n      }\n      \n      // Reset status after a delay\n      setTimeout(() => {\n        setCameraStatus(isCameraReady ? 'Camera active' : 'Initializing camera...');\n      }, 2000);\n    }\n  };\n  \n  // When stream ends, ensure the parent has the latest image\n  useEffect(() => {\n    if (!isActive && storedImage) {\n      console.log('Stream ended, ensuring parent has the latest captured image');\n      onImageCapture(storedImage);\n    }\n  }, [isActive, storedImage, onImageCapture]);\n  \n  // Handle camera setup and teardown\n  useEffect(() => {\n    if (isActive && !cameraError) {\n      console.log('Starting camera');\n      setCameraStatus('Initializing camera...');\n      \n      // Reset hasValidImage but keep any stored image\n      if (!storedImage) {\n        setHasValidImage(false);\n      }\n      \n      // Only initialize the camera if it's not already ready\n      if (!isCameraReady || !streamRef.current) {\n        // Start camera with specific constraints for better quality\n        navigator.mediaDevices.getUserMedia({ \n          video: { \n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n            facingMode: 'user'\n          } \n        })\n          .then(stream => {\n            console.log('Camera access granted');\n            streamRef.current = stream;\n            \n            if (videoRef.current) {\n              // Set srcObject to the stream\n              videoRef.current.srcObject = stream;\n              \n              // Listen for loadedmetadata event\n              videoRef.current.onloadedmetadata = () => {\n                console.log('Video metadata loaded');\n                \n                // Play the video\n                videoRef.current.play()\n                  .then(() => {\n                    console.log('Video playback started');\n                    setCameraStatus('Camera active - Use the capture buttons below');\n                    \n                    // Wait a moment to ensure video is actually rendering frames\n                    setTimeout(() => {\n                      setIsCameraReady(true);\n                    }, 1000);\n                  })\n                  .catch(error => {\n                    console.error('Error starting video playback:', error);\n                    setCameraError(true);\n                    setCameraStatus('Camera error: ' + error.message);\n                  });\n              };\n              \n              // Listen for errors\n              videoRef.current.onerror = (error) => {\n                console.error('Video element error:', error);\n                setCameraError(true);\n                setCameraStatus('Video error: ' + (error.message || 'Unknown error'));\n              };\n            }\n          })\n          .catch(error => {\n            console.error('Error accessing camera:', error);\n            setCameraError(true);\n            setCameraStatus('Camera access error: ' + error.message);\n          });\n      } else {\n        // Camera is already initialized, just update the status\n        setCameraStatus('Camera active - Use the capture buttons below');\n      }\n    } else if (!isActive) {\n      // Stop camera when stream ends\n      if (streamRef.current) {\n        console.log('Stopping camera');\n        setCameraStatus('Stopping camera...');\n        \n        // Stop all tracks\n        streamRef.current.getTracks().forEach(track => {\n          track.stop();\n          console.log(`Track ${track.kind} stopped`);\n        });\n        streamRef.current = null;\n        setIsCameraReady(false);\n        setCameraStatus('Camera stopped');\n      }\n    }\n    \n    return () => {\n      // Only stop the camera in the cleanup function if isActive is false\n      // This prevents stopping the camera when the component re-renders\n      if (!isActive && streamRef.current) {\n        console.log('Cleanup: stopping camera tracks');\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [isActive, cameraError, storedImage]); // Remove captureMode from dependencies\n  \n  // Render face recognition result\n  const renderFaceRecognition = () => {\n    if (faceRecognitionLoading) {\n      return <div className=\"analysis-loading\">Identifying person...</div>;\n    }\n    \n    if (faceRecognitionResult && faceRecognitionResult.success) {\n      return (\n        <div className=\"face-recognition-result\">\n          <h4>Person Identified:</h4>\n          <div className=\"person-info\">\n            <div className=\"person-id\">ID: {faceRecognitionResult.person_id}</div>\n            <div className=\"person-name\">{faceRecognitionResult.person_name}</div>\n            <div className=\"person-profession\">{faceRecognitionResult.person_profession}</div>\n            <div className=\"confidence\">Confidence: {faceRecognitionResult.confidence}%</div>\n            {faceRecognitionResult.reference_comparison && faceRecognitionResult.reference_image_url && (\n              <div className=\"reference-image-container\">\n                <p>Matched with reference image:</p>\n                <img \n                  src={`http://localhost:8080${faceRecognitionResult.reference_image_url}`} \n                  alt={`Reference for ${faceRecognitionResult.person_name}`} \n                  className=\"reference-image\"\n                />\n              </div>\n            )}\n            {faceRecognitionResult.is_fallback && (\n              <div className=\"fallback-notice\">\n                Note: Using simulated recognition (API issue)\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    }\n    \n    if (faceRecognitionResult && !faceRecognitionResult.success) {\n      return (\n        <div className=\"face-recognition-error\">\n          <p>Error identifying person: {faceRecognitionResult.error}</p>\n        </div>\n      );\n    }\n    \n    return null;\n  };\n  \n  // Render medical image analysis result\n  const renderImageAnalysis = () => {\n    if (imageAnalysisLoading) {\n      return <div className=\"analysis-loading\">Analyzing image...</div>;\n    }\n    \n    if (imageAnalysisResult && imageAnalysisResult.success) {\n      return (\n        <div className=\"image-analysis-result\">\n          <h4>Scale Measurement Analysis:</h4>\n          <div className=\"analysis-text\">{imageAnalysisResult.analysis}</div>\n          \n          {imageAnalysisResult.weight && (\n            <div className=\"weight-measurement\">\n              <h5>Detected Weight:</h5>\n              <div className={`weight-value ${imageAnalysisResult.hasOvershot ? 'overshot' : 'acceptable'}`}>\n                {imageAnalysisResult.weight} {imageAnalysisResult.unit}\n                {imageAnalysisResult.hasOvershot ? \n                  <span className=\"overshot-warning\"> ⚠️ EXCEEDS TARGET!</span> : \n                  <span className=\"target-ok\"> ✓ Within target</span>\n                }\n              </div>\n              <div className=\"target-info\">\n                Target: {imageAnalysisResult.targetWeight}g\n              </div>\n              {imageAnalysisResult.hasOvershot && (\n                <div className=\"recommendation\">\n                  Recommendation: Reduce the amount to match the target weight of {imageAnalysisResult.targetWeight}g.\n                </div>\n              )}\n            </div>\n          )}\n          \n          {imageAnalysisResult.is_fallback && (\n            <div className=\"fallback-notice\">\n              Note: Using simulated analysis (API issue)\n            </div>\n          )}\n        </div>\n      );\n    }\n    \n    if (imageAnalysisResult && !imageAnalysisResult.success) {\n      return (\n        <div className=\"image-analysis-error\">\n          <p>Error analyzing image: {imageAnalysisResult.error}</p>\n        </div>\n      );\n    }\n    \n    return null;\n  };\n  \n  // Render patient medical history\n  const renderPatientMedicalHistory = () => {\n    if (!patientData) return null;\n    \n    return (\n      <div className=\"patient-medical-history\">\n        <h3>Patient Medical History</h3>\n        <div className=\"patient-header\">\n          <div className=\"patient-name-id\">\n            <h4>{patientData.full_name}</h4>\n            <div className=\"patient-id-tag\">ID: {patientData.patient_id}</div>\n          </div>\n          <div className=\"patient-demographics\">\n            <span>Age: {patientData.age}</span>\n            <span>Gender: {patientData.gender}</span>\n            <span>Blood Type: {patientData.blood_type}</span>\n          </div>\n        </div>\n        \n        <div className=\"medical-data-grid\">\n          <div className=\"medical-data-column\">\n            <div className=\"medical-data-section\">\n              <h5>Allergies</h5>\n              <ul>\n                {patientData.allergies.map((allergy, index) => (\n                  <li key={`allergy-${index}`}>{allergy}</li>\n                ))}\n              </ul>\n            </div>\n            \n            <div className=\"medical-data-section\">\n              <h5>Medical Conditions</h5>\n              <ul>\n                {patientData.medical_conditions.map((condition, index) => (\n                  <li key={`condition-${index}`}>{condition}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"medical-data-column\">\n            <div className=\"medical-data-section\">\n              <h5>Current Medications</h5>\n              <ul>\n                {patientData.current_medications.map((med, index) => (\n                  <li key={`med-${index}`}>{med.name} {med.dosage} ({med.frequency})</li>\n                ))}\n              </ul>\n            </div>\n            \n            <div className=\"medical-data-section\">\n              <h5>Recent Visits</h5>\n              <ul className=\"visits-list\">\n                {patientData.recent_visits.map((visit, index) => (\n                  <li key={`visit-${index}`}>\n                    <span className=\"visit-date\">{visit.date}</span>\n                    <span className=\"visit-reason\">{visit.reason}</span>\n                    <span className=\"visit-doctor\">{visit.doctor}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"medical-data-section lab-results\">\n          <h5>Lab Results</h5>\n          <table>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Test</th>\n                <th>Result</th>\n                <th>Notes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {patientData.lab_results.map((lab, index) => (\n                <tr key={`lab-${index}`}>\n                  <td>{lab.date}</td>\n                  <td>{lab.test}</td>\n                  <td>{lab.result}</td>\n                  <td>{lab.notes}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        \n        <div className=\"medical-data-section\">\n          <h5>Clinical Notes</h5>\n          <p className=\"clinical-notes\">{patientData.notes}</p>\n        </div>\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"video-capture-container\">\n      <div className=\"video-capture\">\n        <video \n          ref={videoRef} \n          className={isActive ? 'active' : 'inactive'} \n          muted\n          playsInline\n          autoPlay\n        />\n        \n        {isActive && (\n          <div className=\"camera-controls\">\n            <div className=\"status-indicator\">\n              {cameraStatus}\n              {hasValidImage && <span className=\"checkmark\">✓</span>}\n            </div>\n          </div>\n        )}\n        \n        {!isActive && hasValidImage && (\n          <div className=\"image-saved-indicator\">\n            <p>Image saved and will be sent with your audio</p>\n          </div>\n        )}\n        \n        {!isActive && !hasValidImage && (\n          <div className=\"camera-inactive\">\n            <p>No image captured. Start stream to use camera.</p>\n          </div>\n        )}\n        \n        {cameraError && (\n          <div className=\"camera-error\">\n            <p>{cameraStatus || 'Camera access error. Please check your permissions.'}</p>\n          </div>\n        )}\n      </div>\n      \n      {isActive && (\n        <div className=\"capture-buttons\">\n          <button \n            className=\"face-capture-button\"\n            onClick={handleFaceCapture}\n            disabled={!isCameraReady || faceRecognitionLoading}\n          >\n            👤 Capture Face\n          </button>\n          <button \n            className=\"medical-capture-button\"\n            onClick={handleMedicalCapture}\n            disabled={!isCameraReady || imageAnalysisLoading}\n          >\n            🩺 Capture Medical Image\n          </button>\n        </div>\n      )}\n      \n      <div className=\"image-analysis-container\">\n        {renderFaceRecognition()}\n        {renderImageAnalysis()}\n        {renderPatientMedicalHistory()}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCapture; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}